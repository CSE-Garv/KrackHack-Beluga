import sys
import hashlib
import os

# Dummy database of malware hashes (MD5 & SHA-256)
MALWARE_HASHES = {
    "098f6bcd4621d373cade4e832627b4f6",  # Example MD5 hash
    "5d41402abc4b2a76b9719d911017c592",  # Another MD5 hash
    "2d711642b726b04401627ca9fbac32f5ff4a618fc8a6eaa4d09b7c21c017b422"  # Example SHA-256
}

def calculate_hashes(file_path):
    """Calculate MD5 and SHA-256 hashes of a file."""
    md5_hash = hashlib.md5()
    sha256_hash = hashlib.sha256()
    try:
        with open(file_path, "rb") as f:
            for chunk in iter(lambda: f.read(4096), b""):
                md5_hash.update(chunk)
                sha256_hash.update(chunk)
        return md5_hash.hexdigest(), sha256_hash.hexdigest()
    except FileNotFoundError:
        print("Error: File not found")
        return None, None
    except PermissionError:
        print("Error: No permission to read the file")
        return None, None

def scan_file(file_path):
    """Check if a file is malware based on its hash."""
    md5_hash, sha256_hash = calculate_hashes(file_path)
    if not md5_hash or not sha256_hash:
        return "Scan failed: File not found or inaccessible ❌"

    print(f"Scanning File: {file_path}")
    print(f"MD5 Hash: {md5_hash}")
    print(f"SHA-256 Hash: {sha256_hash}")

    if md5_hash in MALWARE_HASHES or sha256_hash in MALWARE_HASHES:
        return "Infected: Malware detected ❌"
    return "Clean: No malware found ✅"

if __name__ == "__main__":
    if len(sys.argv) < 2:
        print("Usage: python malware_scan.py <file_path>")
    else:
        print(scan_file(sys.argv[1]))
